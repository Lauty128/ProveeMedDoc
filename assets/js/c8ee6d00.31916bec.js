"use strict";(self.webpackChunkprovee_med_docs=self.webpackChunkprovee_med_docs||[]).push([[177],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?r.createElement(f,l(l({ref:t},u),{},{components:a})):r.createElement(f,l({ref:t},u))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2953:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:1,title:"Estructura del proyecto"},l=void 0,i={unversionedId:"arquitectura",id:"arquitectura",title:"Estructura del proyecto",description:"En nuestra API, seguimos el patr\xf3n de dise\xf1o Modelo-Vista-Controlador (MVC), que es una arquitectura de software que organiza la aplicaci\xf3n en tres componentes principales: el Modelo, la Vista y el Controlador.",source:"@site/docs/arquitectura.md",sourceDirName:".",slug:"/arquitectura",permalink:"/ProveeMedDoc/docs/arquitectura",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/arquitectura.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Estructura del proyecto"},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n",permalink:"/ProveeMedDoc/docs/intro"},next:{title:"Estructura de los datos",permalink:"/ProveeMedDoc/docs/Base de datos"}},s={},c=[{value:"Relaci\xf3n entre Controladores y Modelos:",id:"relaci\xf3n-entre-controladores-y-modelos",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"En nuestra API, seguimos el patr\xf3n de dise\xf1o ",(0,n.kt)("strong",{parentName:"p"},"Modelo-Vista-Controlador")," (MVC), que es una arquitectura de software que organiza la aplicaci\xf3n en tres componentes principales: el Modelo, la Vista y el Controlador."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Modelo:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Definici\xf3n:")," El Modelo representa los datos y la l\xf3gica de negocio de la aplicaci\xf3n. En nuestra API, los modelos son responsables de interactuar con la base de datos y gestionar la manipulaci\xf3n y recuperaci\xf3n de datos."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Implementaci\xf3n:")," En los modelos, formulamos las consultas SQL y definimos la estructura de los datos. Aqu\xed es donde se lleva a cabo la l\xf3gica que manipula y recupera la informaci\xf3n necesaria."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Vista (Aunque no se utilice directamente en una API sin vistas):")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Definici\xf3n:")," La Vista maneja la presentaci\xf3n y visualizaci\xf3n de los datos al usuario. En una API sin interfaz gr\xe1fica, este componente puede ser menos prominente, ya que la presentaci\xf3n se gestiona principalmente en el lado del cliente."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Implementaci\xf3n:"),' Aunque no haya vistas directas en la API, los datos enviados a trav\xe9s de las respuestas de la API sirven como la "vista" en un sentido m\xe1s amplio.'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Controlador:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Definici\xf3n:")," El Controlador act\xfaa como intermediario entre el Modelo y la Vista. En nuestra API, los controladores contienen la l\xf3gica que gestiona las solicitudes entrantes, extrae y formatea los par\xe1metros, y coordina la interacci\xf3n entre los modelos y el cliente."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Implementaci\xf3n:")," En los controladores, se extraen los par\xe1metros de las solicitudes, se validan y formatean seg\xfan sea necesario. Aqu\xed es donde reside la l\xf3gica principal de la API, y es com\xfan la reutilizaci\xf3n de modelos en diferentes controladores.")))),(0,n.kt)("h3",{id:"relaci\xf3n-entre-controladores-y-modelos"},"Relaci\xf3n entre Controladores y Modelos:"),(0,n.kt)("p",null,"En algunos casos, un controlador puede necesitar interactuar con m\xfaltiples modelos para realizar operaciones espec\xedficas. Esto es una pr\xe1ctica com\xfan cuando se requiere informaci\xf3n de diferentes fuentes o se realizan operaciones m\xe1s complejas."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Reutilizaci\xf3n de Modelos:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Algunos controladores pueden reutilizar l\xf3gica definida en otros modelos. Esto promueve la reutilizaci\xf3n de c\xf3digo y asegura la coherencia en la manipulaci\xf3n de datos."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Uso de M\xfaltiples Modelos en un Controlador:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"En determinadas situaciones, un controlador puede interactuar con dos o m\xe1s modelos para realizar operaciones m\xe1s complejas o para acceder a diferentes conjuntos de datos.")))))}d.isMDXComponent=!0}}]);